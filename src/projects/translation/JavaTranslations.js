const translations = {
  es: {
    back: "Volver",
    javaTitle: "Proyectos Destacados en Java, Python y Assembler",
    javaRole: "Desarrollador en entornos de escritorio, algorítmicos y sistemas",
    javaTravelSimulationTitle: "Simulación de Empresa de Viajes (Java)",
    javaTravelSimulationDescription: "Desarrollo de un sistema de escritorio para gestionar una empresa de viajes. Permite administrar paquetes, estadías, excursiones y clientes. Se utilizaron conceptos de <strong>POO</strong> como herencia, abstracción y encapsulamiento, además de algoritmos con complejidad temporal optimizada.",
    javaPuzzleGameTitle: "Juego tipo Rompecabezas con WindowBuilder (Java)",
    javaPuzzleGameDescription: "Juego de puzzle implementado con <strong>Java + WindowBuilder</strong>. El usuario debe ordenar piezas en un tablero con un número limitado de movimientos y tiempo. Se utilizó la arquitectura <strong>Forms and Controls</strong> para desacoplar presentación de la lógica.",
    javaPrimAlgorithmTitle: "Aplicación de Árbol Generador Mínimo con JMapViewer (Java)",
    javaPrimAlgorithmDescription: "Aplicación que muestra puntos geográficos conectados mediante aristas con pesos definidos por el usuario. Implementa el <strong>algoritmo de Prim</strong> y el patrón <strong>MVP</strong> para calcular el recorrido óptimo entre nodos.",
    javaKnapsackTitle: "Problema de la Mochila – Salón de Fiestas (Java)",
    javaKnapsackDescription: "Simulación de ofertas sobre el uso de un salón de eventos en 24 horas. Utiliza algoritmos de selección para <strong>maximizar ganancias</strong> sin superposición horaria. Desarrollado bajo <strong>MVP</strong>.",
    javaJunitTitle: "Testeo Unitario con JUnit (Java)",
    javaJunitDescription: "Desarrollo de pruebas unitarias con <strong>JUnit</strong> cubriendo métodos, excepciones y escenarios límite. Aplicación de <strong>mock frameworks</strong> y buenas prácticas de testing.",
    javaGame2DTitle: "Juego 2D – Java (proyecto grupal)",
    javaGame2DDescription: "Juego 2D ambientado en una ciudad invadida por monstruos. El jugador debe eliminar enemigos, esquivar disparos y coches, y enfrentar a un jefe final. Menús de victoria/derrota según el desempeño.",
    javaGame2DPoint1: "Eliminación de enemigos con proyectiles.",
    javaGame2DPoint2: "Manejo de colisiones y estados del jugador.",
    javaGame2DPoint3: "Diseño de interfaz con menús dinámicos.",
    javaGame2DPoint4: "<strong>POO en Java</strong>, manejo de arrays y objetos.",
    armProjectTitle: "Proyecto en ARM – Raspberry Pi (Assembler)",
    armProjectDescription: "Programa que codifica y decodifica mensajes usando el <strong>cifrado César</strong>. Implementado en ensamblador para <strong>ARM v8</strong>, ejecutado sobre Raspberry Pi.",
    armProjectPoint1: "Codificación mediante desplazamiento basado en vector.",
    armProjectPoint2: "Decodificación con palabra clave.",
    armProjectPoint3: "Conteo de caracteres procesados como resultado.",
    armProjectPoint4: "Uso de <strong>registros, subrutinas, pila e interrupciones</strong>.",
    armProjectPoint5: "Aplicación de <strong>arquitectura RISC</strong> y operaciones lógicas.",
    pythonWordGameTitle: "Juego de Palabras – Python",
    pythonWordGameDescription: "Juego tipo anagrama donde se presentan palabras mezcladas que deben reordenarse. Se puntúa según longitud y validez semántica.",
    pythonWordGamePoint1: "Palabras de 3 a 7 letras validadas contra diccionario.",
    pythonWordGamePoint2: "Sistema de puntaje positivo/negativo.",
    pythonWordGamePoint3: "Límite de tiempo para resolver el desafío.",
    pythonWordGamePoint4: "Manejo de listas, bucles, funciones, condiciones y retorno de datos.",
    pythonWordGamePoint5: "Uso de librerías básicas de Python.",
    javaGeneralResultTitle: "Resultado General",
    javaGeneralResultDescription: "Este conjunto de proyectos me permitió desarrollar experiencia en distintos paradigmas: desde interfaces gráficas complejas en Java, pasando por juegos lógicos y proyectos algorítmicos, hasta desarrollo en bajo nivel con assembler y Raspberry Pi. También reforzó mis habilidades en estructuras de datos, testing, arquitectura modular y lógica aplicada.",
  },
  en: {
    back: "Back",
    javaTitle: "Featured Projects in Java, Python, and Assembler",
    javaRole: "Developer in Desktop, Algorithmic, and Systems Environments",
    javaTravelSimulationTitle: "Travel Agency Simulation (Java)",
    javaTravelSimulationDescription: "Development of a desktop system to manage a travel agency. It allows managing packages, stays, excursions, and clients. <strong>OOP</strong> concepts such as inheritance, abstraction, and encapsulation were used, in addition to algorithms with optimized time complexity.",
    javaPuzzleGameTitle: "Puzzle-type Game with WindowBuilder (Java)",
    javaPuzzleGameDescription: "Puzzle game implemented with <strong>Java + WindowBuilder</strong>. The user must arrange pieces on a board with a limited number of moves and time. The <strong>Forms and Controls</strong> architecture was used to decouple presentation from logic.",
    javaPrimAlgorithmTitle: "Minimum Spanning Tree Application with JMapViewer (Java)",
    javaPrimAlgorithmDescription: "Application that displays geographical points connected by edges with user-defined weights. It implements <strong>Prim's algorithm</strong> and the <strong>MVP</strong> pattern to calculate the optimal path between nodes.",
    javaKnapsackTitle: "Knapsack Problem – Party Hall (Java)",
    javaKnapsackDescription: "Simulation of offers for the use of an event hall over 24 hours. It uses selection algorithms to <strong>maximize profits</strong> without time overlap. Developed under <strong>MVP</strong>.",
    javaJunitTitle: "Unit Testing with JUnit (Java)",
    javaJunitDescription: "Development of unit tests with <strong>JUnit</strong> covering methods, exceptions, and edge cases. Application of <strong>mock frameworks</strong> and good testing practices.",
    javaGame2DTitle: "2D Game – Java (group project)",
    javaGame2DDescription: "2D game set in a city invaded by monsters. The player must eliminate enemies, dodge shots and cars, and face a final boss. Victory/defeat menus are displayed according to performance.",
    javaGame2DPoint1: "Elimination of enemies with projectiles.",
    javaGame2DPoint2: "Collision and player state management.",
    javaGame2DPoint3: "Interface design with dynamic menus.",
    javaGame2DPoint4: "<strong>OOP in Java</strong>, handling of arrays and objects.",
    armProjectTitle: "ARM Project – Raspberry Pi (Assembler)",
    armProjectDescription: "Program that encodes and decodes messages using the <strong>Caesar cipher</strong>. Implemented in assembler for <strong>ARM v8</strong>, executed on Raspberry Pi.",
    armProjectPoint1: "Encoding through vector-based displacement.",
    armProjectPoint2: "Decoding with a keyword.",
    armProjectPoint3: "Counting of processed characters as a result.",
    armProjectPoint4: "Use of <strong>registers, subroutines, stack, and interrupts</strong>.",
    armProjectPoint5: "Application of <strong>RISC architecture</strong> and logical operations.",
    pythonWordGameTitle: "Word Game – Python",
    pythonWordGameDescription: "Anagram-type game where mixed-up words are presented and must be reordered. Scoring is based on length and semantic validity.",
    pythonWordGamePoint1: "Words of 3 to 7 letters validated against a dictionary.",
    pythonWordGamePoint2: "Positive/negative scoring system.",
    pythonWordGamePoint3: "Time limit to solve the challenge.",
    pythonWordGamePoint4: "Handling of lists, loops, functions, conditions, and data return.",
    pythonWordGamePoint5: "Use of basic Python libraries.",
    javaGeneralResultTitle: "General Result",
    javaGeneralResultDescription: "This set of projects allowed me to develop experience in different paradigms: from complex graphical interfaces in Java, through logical games and algorithmic projects, to low-level development with assembler and Raspberry Pi. It also strengthened my skills in data structures, testing, modular architecture, and applied logic.",
  },
};

export default translations;
